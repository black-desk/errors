name: Checks

on:
  push:
    branches:
      - master
      - release/*
  pull_request:

jobs:
  checks:
    name: Run black-desk/checks
    permissions:
      checks: write
      contents: read
      issues: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: black-desk/checks@master
  build-and-test:
    name: Build and tests
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        container:
          - debian:sid-slim
        cxx: [g++, clang++]
    container:
      image: ${{ matrix.container }}
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install system dependencies
        run: |
          apt update &&
          apt install -y \
            clang \
            doxygen \
            g++ \
            git \
            graphviz \
            lcov \
            make \
            pkg-config \
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ matrix.container }}-${{ matrix.cxx }}
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v2.0
      - name: Setup CPM_SOURCE_CACHE
        run: |
          export CPM_SOURCE_CACHE="${XDG_CACHE_HOME:-${HOME}/.cache}/CPM" &&
          mkdir -p "$CPM_SOURCE_CACHE" &&
          echo "CPM_SOURCE_CACHE=$CPM_SOURCE_CACHE" >> "$GITHUB_ENV"
      - name: Cache CPM.cmake Source
        uses: actions/cache@v4
        with:
          path: ${{ env.CPM_SOURCE_CACHE }}
          key: ${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}
      - name: Build project with cmake by preset CI
        run: |
          export CMAKE_CXX_COMPILER_LAUNCHER=ccache &&
          export CXX="${{ matrix.cxx }}" &&
          cmake --workflow --preset CI
      - name: Generate coverage.info
        if: matrix.cxx == 'g++'
        run: |
          ./tools/generate-coverage.sh
      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.info
          disable_search: true
  pass:
    name: Pass
    if: always()
    needs:
      - checks
      - build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
